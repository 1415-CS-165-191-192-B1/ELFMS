# Start/stop server: sudo service postgresql start
# postgresql
# grant all privileges on testdb to dyosa;
# \password dyosa
# \du

# /etc/init.d/apache2 stop
# /etc/init.d/apache2 start

#psql -d some_database -U webgui
# psql testdb -U dyosa

https://www.youtube.com/channel/UCFW_fvwCoF44MGWk74U_rFg
django-admin.py dbshell
python manage.py migrate
python manage.py runserver 8080

export PATH="/Applications/Postgres.app/Contents/Versions/9.4/bin:$PATH
python manage.py startapp polls
python manage.py sql polls

manage.py makemigrations
manage.py migrate
python manage.py makemigrations --empty yourappname

Django
loose coupling less code DRY
 Every piece of knowledge must have a single, unambiguous, authoritative representation within a system.
 Project- full website
app- python library; many small apps; good version control
Model Template View
South- creates migrations automatically; intelligent schema

Virtualenv
- "one project, one virtualenv", projects with different dependencies, easier to deploy(?)


Hindrances: 

